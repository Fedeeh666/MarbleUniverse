let s={addonId:"LostTelegramMiniAppsSDK"};import{AppSettings as m}from"../modules/app-settings.js";import{AppEventHandler as g}from"../modules/app-event-handler.js";import{AppData as h}from"../modules/app-data.js";import{AppStorageManager as d}from"../modules/app-storage-manager.js";import{AppBiometricManager as u}from"../modules/app-biometric-manager.js";class c extends globalThis.ISDKInstanceBase{constructor(){super(),this.WebApp=self.Telegram.WebApp,this.conditions=C3.Plugins[s.addonId].Cnds,this.appSettings=new m(this._getInitProperties()),this.appEventHandler=new g(this),this.appData=new h,this.appStorageManager=new d(this),this.appBiometricManager=new u}_release(){super._release()}_getTelegramUser(){var e=this.WebApp.initDataUnsafe.user;return e||null}_isInTelegram(){return null!==this._getTelegramUser()}async _getChatMember(e,t,r){e=`https://api.telegram.org/bot${e}/getChatMember`,t=new URLSearchParams({chat_id:String(t),user_id:String(r)});try{var s,a=await(await fetch(e+"?"+t.toString())).json();a.ok&&(s=a.result.status,"creator"===(this.appData.lastChatMemberUserStatus=s)||"administrator"===s||"member"===s)?this._trigger(this.conditions.onGetChatMember):this._trigger(this.conditions.onGetChatMemberError)}catch(e){this._trigger(this.conditions.onGetChatMemberError)}}}globalThis.C3.Plugins.LostTelegramMiniAppsSDK.Instance=c;